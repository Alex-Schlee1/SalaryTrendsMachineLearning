from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
from tqdm import tqdm
import pandas as pd

### Collecting all the job links

#install latest version
driver = webdriver.Chrome(ChromeDriverManager().install())
#initializing Chrome Driver
driver=webdriver.Chrome('chromedriver.exe')
# searching for machine learning engineer jobs in england
driver.get('https://www.indeed.co.uk/jobs?q=machine+learning+engineer&l=England')

#creating an empty list to store all job links

list_of_links2=[]
condition=True
while condition:
    #find all job postings
    job_info=driver.find_elements_by_class_name('jobsearch-SerpJobCard')
    #get the links for all job postings
    for links in job_info:
        step_1=links.find_elements_by_tag_name('h2')[0].find_element_by_tag_name('a')
        #get the links of each job desctiption and store it in a list
        list_of_links2.append(step_1.get_property('href'))
        
    #pagination/ get next page    
    try:
        driver.find_elements_by_class_name('np')[-1].click()
    except:
        condition=False

# Iterate through each job link and grab the following information:
# - job title,  company name,  location,  salary,  job description


all_details=[]

#get the links
#with the tqdm package you can track your results
for i in tqdm(list_of_links2):
    driver.get(i)
    time.sleep(2)
     
    
    # get the job title
    # return 'NaN' if nothing found
    try:
        Job_title= driver.find_element_by_xpath('//h3[@class="icl-u-xs-mb--xs icl-u-xs-mt--none jobsearch-JobInfoHeader-title"]').text
    except:
        Job_title='NaN'
    
    # get the company name  
    # return 'NaN' if nothing found
    try:
        Company_name=driver.find_element_by_xpath('//div[@class="icl-u-lg-mr--sm icl-u-xs-mr--xs"]').text 
    except:
        Company_name='NaN'
    
    # get the location
    # return 'NaN' if nothing found
    try:
        Location=driver.find_element_by_xpath('/html/body/div[1]/div[2]/div[3]/div/div/div[1]/div[1]/div[4]/div[1]/div[1]/span').text
    except:
        Location='NaN'
    
    # get the salary information
    # return 'NaN' if nothing found
    try:
        Salary= driver.find_element_by_xpath('/html/body/div[1]/div[2]/div[3]/div/div/div[1]/div[1]/div[4]/div[1]/div[3]/span').text
    except:
        Salary='NaN' 
        
    # get the job description
    # return 'NaN' if nothing found   
    try:   
        Description=driver.find_element_by_xpath('//*[@id="jobDescriptionText"]').text
    except:
        Description='NaN'
    
    
    
    #append results to a dictionary
    tempI={'Job_title': Job_title,
           'Company_name': Company_name,
            'Location': Location,
            'Salary': Salary,
            'Job_Description': Description}
   

    all_details.append(tempI)
    
  #append the results in pandas dataframe
  df_raw_data=pd.DataFrame(all_details)
    
  # save results in csv file
  df_raw_data.to_csv('Indeed_Raw_Data.csv')
    
    

        
        
